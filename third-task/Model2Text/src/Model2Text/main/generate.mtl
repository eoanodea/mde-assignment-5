[comment encoding = UTF-8 /]
[module generate('platform:/resource/Model2TextModel/model/System.ecore/')]


[template public generateElement(aSystem : System)]
[comment @main/]
[file (aSystem.name+'.sql', false, 'UTF-8')]

-- System [aSystem.name/] 
-- Autogenerated V[aSystem.version/].[aSystem.subversion/]

DROP TABLE elements;
DROP TABLE forms;
DROP TABLE dynamic_content;
DROP TABLE attributes;
DROP TABLE entities;
DROP TABLE static_content;
DROP TABLE pages;
DROP TABLE system;


CREATE TABLE system (
	id SERIAL PRIMARY KEY, 
	name varchar(255),
	description varchar(255),
	version int,
	sub_version int
);

CREATE TABLE pages (
	id SERIAL PRIMARY KEY, 
	title varchar(255),
	url varchar(255),
	description varchar(255),
	is_home_page varchar(255),
    system_id INT REFERENCES system(id)
);

CREATE TABLE static_content (
	id SERIAL PRIMARY KEY, 
	type varchar(255),
	text varchar(255),
	page_id INT REFERENCES pages(id)
);


CREATE TABLE entities (
	id SERIAL PRIMARY KEY, 
	name varchar(255),
	description varchar(255),
    system_id INT REFERENCES system(id)
);

CREATE TABLE attributes (
	id SERIAL PRIMARY KEY, 
	name varchar(255),
	description varchar(255),
	type varchar(255),
	is_primary_key varchar(255),
	entity_id INT REFERENCES entities(id)
);

CREATE TABLE dynamic_content (
	id SERIAL PRIMARY KEY, 
	attribute_id INT REFERENCES attributes(id),
	entity_id INT REFERENCES entities(id),
	page_id INT REFERENCES pages(id)
);

CREATE TABLE forms (
	id SERIAL PRIMARY KEY,
	name varchar(255),
	description varchar(255),
	method varchar(255),
	entity_id INT REFERENCES entities(id),
	page_id INT REFERENCES pages(id)
);

CREATE TABLE elements (
	id SERIAL PRIMARY KEY,
	name varchar(255),
	description varchar(255),
	label varchar(255),
	attribute_id INT REFERENCES attributes(id),
	form_id INT REFERENCES forms(id)
);


INSERT INTO system (ID, name, description, version, sub_version) VALUES ([aSystem.identifier/], '[aSystem.name/]', '[aSystem.description/]', [aSystem.version/], [aSystem.subversion/]);
[for (it : Entity | aSystem.entities)]
	
INSERT INTO entities (ID, name, description, system_id) VALUES ([it.identifier/],'[it.name/]', '[it.description/]', [aSystem.identifier/]);
	[for (it2 : Attribute | it.features)]
INSERT INTO attributes (ID, name, description, type, is_primary_key, entity_id) VALUES ([it2.identifier/],'[it2.name/]','[it2.description/]', '[it2.type/]', '[it2.IsPrimaryKey/]', [it.identifier/]); 
	[/for]	
	
[/for]
[for (it : Page | aSystem.pages)]	
	
INSERT INTO pages (ID, title, url, description, is_home_page, system_id) VALUES ([it.identifier/], '[it.name/]', '[it.url/]', '[it.description/]', '[it.isHomePage/]', 1);
	[for (it2 : Content | it.content)]
		[if (it2.eClass().name.equalsIgnoreCase('StaticContent'))]
INSERT INTO static_content (ID, type, text, page_id) VALUES ([it2.eGet('identifier')/],'[it2.eGet('type')/]', '[it2.eGet('text')/]', [it.identifier/]);
		[elseif (it2.eClass().name.equalsIgnoreCase('Form'))]	
INSERT INTO forms (ID, name, description, method, entity_id, page_id) VALUES ([it2.eGet('identifier')/], '[it2.eGet('name')/]', '[it2.eGet('description')/]', '[it2.eGet('method')/]','[it2.eGet('entity').eGet('identifier')/]', [it.identifier/]);
			[for (it3 : Element | it2.eGet('elements'))]
INSERT INTO elements (ID, name, description, label, attribute_id, form_id) VALUES ([it3.identifier/], '[it3.name/]', '[it3.description/]', '[it3.label/]', '[it3.eGet('attr').eGet('identifier')/]', '[it2.eGet('identifier')/]');
			[/for]
		[elseif (it2.eClass().name.equalsIgnoreCase('DynamicContent'))]
INSERT INTO dynamic_content (ID, attribute_id, entity_id, page_id) VALUES ([it2.eGet('identifier')/], [it2.eGet('attr').eGet('identifier')/], [it2.eGet('entity').eGet('identifier')/], [it.identifier/]);
		[/if]
	[/for]	
	
[/for]

SELECT (title, description, url) FROM pages WHERE is_home_page = 'true';

SELECT * FROM attributes WHERE entity_id = 1 AND is_primary_key = 'true';



[/file]
[/template]
